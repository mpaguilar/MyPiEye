[global]
; where EzMotion keeps files for comparison/upload
; this is required. It is remarked out to encourage checking this file.
workdir = ./tmp

; the last image captured by the camera
; relative to workdir
current_image_name = current_image.jpg

; secrets and such. Must be r/w.
credential_folder = .

; must be all caps
loglevel = DEBUG

; for display purposes
; TIMEZONE
timezone = US/Central


[multi]
# pull images from the camera
# save them, and send a message
; MULTI_CAMERA
enable_camera = True

# storage backends

# the number of processes per backend
backend_processes = 2

# requires an [azure_blob] section
; MULTI_AZBLOB
enable_azure_blob = False

# requires a [minio] section
# uses the minio client, so it should work with most s3 providers
# except maybe AWS s3
; MULTI_MINIO
enable_minio = True

# requires a [redis] section
# no server right now, and nothing using the output
; MULTI_REDIS
enable_redis = False

# requires [celery] section
enable_celery = True

# requires an [iothub] section
# not implemented
enable_iothub = False

# requires a [local] section
# not working right now
; MULTI_LOCAL
enable_local = False

[camera]

; camera resolution
; valid values:
; small, 720p, 1080p
resolution = 720p

; the camera this instance should be watching
camera = 0

; unique per-camera, e.g. hostname/camindex
; CAMERA_ID for some modules
camera_id = server/cam0

; delay between captures
; use 0 to disable
time_delay = 0

; when True, only frames which differ will be reported as captured
watch_for_motion = True

[minsizes]
; ignore any changes smaller than this (width * height)
minsize = 1500
min_width = 100

[ignore]
; x, y, w, l
trees = (0, 0, 1275, 442)
lbush = (160, 434, 327, 211)
rbush1 = (774, 440, 279, 189)
min_height = 50

;;;;;;;
; Services
;;;;;;;

[redis]
; REDIS_HOST
host =
; REDIS_PORT
port = 6379
; REDIS_DB
db = 0

[celery]
; CELERY_REDIS_HOST
host =
; CELERY_REDIS_PORT
port = 6379
; CELERY_REDIS_DB
db = 0

[minio]
; when using private/self-signed certs, set SSL_CERT_FILE env
; MINIO_ACCESS_KEY
access_key =
; MINIO_SECRET_KEY
secret_key =
; MINIO_URL
url =
; MINIO_BUCKET
bucket_name = mypieye

; MINIO_FMT
filename_format = %Y%m%d/%H/%M/%Y.%m.%d.%H.%M.%S.%f

[azure_blob]
; AZBLOB_KEY
key = nunya
; AZBLOB_ACCOUNT
account = biznezz
; AZBLOB_CONTAINER
container = house

; passed to strftime
; AZBLOB_FMT
filename_format = %Y%m%d/%H/%M/%Y.%m.%d.%H.%M.%S.%f

[local]
savedir = ./cam0
filename_format = %Y%m%d/%H/%M/%Y.%m.%d.%H.%M.%S.%f

; where to store a current image for local webserver

; LOCAL_STATIC
static_web_dir = ./www

; [gdrive]
; The gdrive folder to store motion
; folder_name = mypieye
; client_id =
; client_secret =

[s3]
aws_access_key_id =
aws_secret_access_key =
bucket_name = house-data
aws_region = us-east-1

camera_table_name =
image_table_name =


[iothub]
